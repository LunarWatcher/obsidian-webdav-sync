name: Test and build nightly artefacts
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  artefacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deps
        run: npm i
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test
      - name: Assemble artefacts
        run: |
          OUTPUT=obsidian-webdav-sync
          mkdir $OUTPUT
          cp styles.css $OUTPUT
          cp main.js $OUTPUT
          cp manifest.json $OUTPUT
          ls $OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: obsidian-webdav-sync
          path: obsidian-webdav-sync
          if-no-files-found: error
  integration:
    needs: artefacts
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            mobile-mock: false
            artefact: obsidian_[^_]_amd64.deb
    runs-on: ${{ matrix.os }}
    steps:
      - run: printenv
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Npm dev deps
        run: |
          npm i --include=dev
      - uses: actions/download-artifact@v5
        with:
          name: obsidian-webdav-sync
          path: obsidian-webdav-sync
      - uses: actions/download-artifact@v5
        with:
          name: obsidian-webdav-sync
          path: obsidian-webdav-sync
      - name: Show artefact tree
        run: ls obsidian-webdav-sync
      - name: Yoink Obsidian .deb
        id: download-artifact
        # Yes, this is a different artefact downloader. The official one does not support
        # releases
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: workflow_name.yml
          ref: v1.9.12
          name: ${{ matrix.artefact }}
          name_is_regexp: true
          path: .
          repo: github.com/obsidianmd/obsidian-releases
      - name: DEBUG
        run: |
          ls 
      - name: Python deps
        working-directory: integration-tests/
        run: |
          pip3 install --break-system-packages -r requirements.txt 
          sudo apt install -y xvfb-run
      - name: Run tests
        working-directory: integration-tests/
        run: |
          xvfb-run python3 -m pytest
